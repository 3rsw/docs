seL4 runs on 32-bit ia32 machines, on qemu and on hardware.

= Simulation =

See [[https://wiki.sel4.systems/Getting%20started#Build_ia32|Getting Started]], which steps through building and running seL4 test on qemu.

= Real Hardware =

The build system produces a multiboot compliant image for x86; a grub2 stanza is here, but we usually boot via PXE for convenience.

{{{
menuentry "Load seL4 VM"  --class os {
   load_video
   insmod gzio
   insmod part_msdos
   insmod ext2
   set root='(hd0,msdos2)'
   multiboot /boot/sel4kernel
   module /boot/sel4rootserver
}
}}}

== Booting off USB with syslinux ==

Use syslinux to create a bootable USB stick as follows.

Assuming your USB flash drive is at `/dev/sdb` with a FAT
partition at `/dev/sdb1`:

{{{
  install-mbr /dev/sdb
  syslinux --install /dev/sdb1
  mount /dev/sdb1 /mnt
  cp images/sel4test-driver-image-ia32-pc99 /mnt/rootserver
  cp images/kernel-ia32-pc99 /mnt/sel4kernel
  cat > /mnt/syslinux.cfg <<EOF
  SERIAL 0 115200
  DEFAULT seL4test
  LABEL seL4test
    kernel mboot.c32
    append sel4kernel --- rootserver
  EOF
  cp /usr/lib/syslinux/modules/bios/mboot.c32 /mnt
  cp /usr/lib/syslinux/modules/bios/libcom32.c32 /mnt
  umount /mnt
}}}
  
Use `fdisk` to make sure the first partition is bootable.

And you're done.  Output will come on the serial port
